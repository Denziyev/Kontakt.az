@using Kontakt.App.Models;
@using Kontakt.Service.Responses;
@model MvcResponse<List<Category>>
@if (!string.IsNullOrWhiteSpace((string)TempData["category_contoller_response"]))
{
    <div style="display:none" id="message">@TempData["category_contoller_response"]</div>
}
@if (!string.IsNullOrWhiteSpace((string)TempData["category_contoller_response_delete"]))
{
    <div style="display:none" id="message">@TempData["category_contoller_response_delete"]</div>
}
@if (!string.IsNullOrWhiteSpace((string)TempData["category_contoller_response_update"]))
{
    <div style="display:none" id="message">@TempData["category_contoller_response_update"]</div>
}
<div class="container">
    <table class="table table-sm">
        <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Name</th>
                <th scope="col">ParentName</th>
                <th scope="col">Map</th>
                <th scope="col">SubCateCount</th>
                
                <th scope="col">Image</th>

                <th scope="col">Update</th>
                <th scope="col">Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Data)
            {

                <tr>
                    <th scope="row">@item.Id</th>
                    <th>@item.Name</th>
                    @if (item.ParentCategoryId != null)
                        {
                        <th>@item.ParentCategory?.Name</th>
                    }
                    else{

                        <th>    -</th>
                        }

                    @{
                        List<string> maps = new List<string>();

                        maps.Add(item.Name);
                    }
                    
                        @if (item.ParentCategoryId != null)
                    {

                        var currentItem = item; // Create a copy of the current item
                        while (currentItem?.ParentCategoryId != null )
                        {
                            currentItem = currentItem.ParentCategory; // Move to the parent category
                            if (currentItem != null)
                            {       
                            maps.Add(currentItem.Name);
                            }
                        }
                        
                    }
                   
                        <th>
                        @for(var i = maps.Count - 1; i >= 0; i--)
                        {
                            if (i != 0)
                            {
                                <text> @maps[i] -></text>
                            }
                            else
                            {            
                            <text> @maps[i] </text>
                            }
                        }
                       
                    </th>

             



                    @*<th>@item.Subcategories.Count</th>*@
                    <th>@item.Products.Count</th>

                    <th> <img style="width:70px;height:70px; object-fit:cover" src="~/Assets/assets/images/Categories/@item.Image">  </th>

                    <td><a asp-controller="category" asp-action="update" asp-route-id="@item.Id"><i class="fas fa-edit text text-primary"></i></a></td>
                    <td><a onclick="if (!confirm('Are you sure to delete?')){return false;}" asp-controller="category" asp-action="delete" asp-route-id="@item.Id" class="delete-item"><i class="fas fa-trash text text-danger"></i></a></td>
                </tr>
            }

        </tbody>
    </table>
    <div>
        <a asp-controller="category" asp-action="create" style="display: block; text-decoration: none; color: white; width: 100%; height: 100%"> <div style="width:100%; " class="btn btn-outline-success">Create Category </div></a>
    </div>

</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    const Message = document.getElementById("message");
    if (Message != undefined) {
        const message = Message.innerHTML;
        if (message != "") {
            Swal.fire(`${message}`)
        }

    }</script>